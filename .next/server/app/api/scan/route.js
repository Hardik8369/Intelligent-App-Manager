"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/scan/route";
exports.ids = ["app/api/scan/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_gowda_OneDrive_Desktop_intelligent_app_manager_2_app_api_scan_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/scan/route.ts */ \"(rsc)/./app/api/scan/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/scan/route\",\n        pathname: \"/api/scan\",\n        filename: \"route\",\n        bundlePath: \"app/api/scan/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\gowda\\\\OneDrive\\\\Desktop\\\\intelligent-app-manager (2)\\\\app\\\\api\\\\scan\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_gowda_OneDrive_Desktop_intelligent_app_manager_2_app_api_scan_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/scan/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzY2FuJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzY2FuJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc2NhbiUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNnb3dkYSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q2ludGVsbGlnZW50LWFwcC1tYW5hZ2VyJTIwKDIpJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNnb3dkYSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q2ludGVsbGlnZW50LWFwcC1tYW5hZ2VyJTIwKDIpJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwQztBQUN2SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvP2QwYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcZ293ZGFcXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxpbnRlbGxpZ2VudC1hcHAtbWFuYWdlciAoMilcXFxcYXBwXFxcXGFwaVxcXFxzY2FuXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zY2FuL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc2NhblwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc2Nhbi9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGdvd2RhXFxcXE9uZURyaXZlXFxcXERlc2t0b3BcXFxcaW50ZWxsaWdlbnQtYXBwLW1hbmFnZXIgKDIpXFxcXGFwcFxcXFxhcGlcXFxcc2NhblxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvc2Nhbi9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/scan/route.ts":
/*!*******************************!*\
  !*** ./app/api/scan/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nconst APP_EXTENSIONS = [\n    \".exe\",\n    \".msi\",\n    \".apk\",\n    \".sh\",\n    \".app\",\n    \".deb\",\n    \".rpm\",\n    \".dmg\",\n    \".pkg\",\n    \".appx\",\n    \".snap\"\n];\nasync function calculateFileHash(filePath) {\n    try {\n        const fileBuffer = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(filePath);\n        const hashSum = crypto__WEBPACK_IMPORTED_MODULE_3___default().createHash(\"sha256\");\n        hashSum.update(fileBuffer);\n        return hashSum.digest(\"hex\");\n    } catch (error) {\n        console.error(`Error calculating hash for ${filePath}:`, error);\n        return \"\";\n    }\n}\nasync function scanDirectory(dirPath) {\n    const files = [];\n    // Clean the directory path - remove extra quotes and normalize\n    const cleanPath = dirPath.replace(/^[\"']|[\"']$/g, \"\").trim();\n    try {\n        // Check if directory exists\n        const stats = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(cleanPath);\n        if (!stats.isDirectory()) {\n            throw new Error(`Path is not a directory: ${cleanPath}`);\n        }\n        console.log(`Scanning directory: ${cleanPath}`);\n        const entries = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readdir(cleanPath, {\n            withFileTypes: true\n        });\n        for (const entry of entries){\n            const fullPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(cleanPath, entry.name);\n            if (entry.isDirectory()) {\n                // Recursively scan subdirectories with error handling\n                try {\n                    const subFiles = await scanDirectory(fullPath);\n                    files.push(...subFiles);\n                } catch (error) {\n                    console.error(`Error scanning subdirectory ${fullPath}:`, error);\n                // Continue with other directories instead of failing completely\n                }\n            } else if (entry.isFile()) {\n                const ext = path__WEBPACK_IMPORTED_MODULE_2___default().extname(entry.name).toLowerCase();\n                if (APP_EXTENSIONS.includes(ext)) {\n                    try {\n                        const stats = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.stat(fullPath);\n                        const hash = await calculateFileHash(fullPath);\n                        if (hash) {\n                            files.push({\n                                path: fullPath,\n                                name: entry.name,\n                                size: stats.size,\n                                hash\n                            });\n                        }\n                    } catch (error) {\n                        console.error(`Error processing file ${fullPath}:`, error);\n                    // Continue with other files\n                    }\n                }\n            }\n        }\n    } catch (error) {\n        if (error instanceof Error) {\n            if (error.message.includes(\"ENOENT\")) {\n                throw new Error(`Directory not found: ${cleanPath}. Please check the path and try again.`);\n            } else if (error.message.includes(\"EACCES\")) {\n                throw new Error(`Permission denied accessing: ${cleanPath}. Please check directory permissions.`);\n            } else {\n                throw new Error(`Error reading directory \"${cleanPath}\": ${error.message}`);\n            }\n        } else {\n            throw new Error(`Unknown error reading directory: ${cleanPath}`);\n        }\n    }\n    return files;\n}\nfunction findDuplicates(files) {\n    const hashGroups = new Map();\n    files.forEach((file)=>{\n        if (!hashGroups.has(file.hash)) {\n            hashGroups.set(file.hash, []);\n        }\n        hashGroups.get(file.hash).push(file);\n    });\n    const duplicateGroups = [];\n    hashGroups.forEach((groupFiles, hash)=>{\n        if (groupFiles.length > 1) {\n            duplicateGroups.push({\n                hash,\n                files: groupFiles,\n                size: groupFiles[0].size\n            });\n        }\n    });\n    return duplicateGroups;\n}\nasync function loadRules() {\n    try {\n        const rulesPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\", \"rules.json\");\n        const rulesData = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(rulesPath, \"utf-8\");\n        return JSON.parse(rulesData).rules || [];\n    } catch (error) {\n        // Return default rules if file doesn't exist\n        return [\n            {\n                id: \"1\",\n                category: \"Developer Tools\",\n                keywords: [\n                    \"code\",\n                    \"studio\",\n                    \"dev\",\n                    \"git\",\n                    \"npm\",\n                    \"node\",\n                    \"python\",\n                    \"java\",\n                    \"ide\"\n                ],\n                pathPatterns: [\n                    \"/Developer\",\n                    \"/Applications/Developer\"\n                ],\n                enabled: true\n            },\n            {\n                id: \"2\",\n                category: \"Productivity\",\n                keywords: [\n                    \"office\",\n                    \"word\",\n                    \"excel\",\n                    \"powerpoint\",\n                    \"notes\",\n                    \"calendar\",\n                    \"mail\"\n                ],\n                pathPatterns: [\n                    \"/Applications/Office\"\n                ],\n                enabled: true\n            },\n            {\n                id: \"3\",\n                category: \"Entertainment\",\n                keywords: [\n                    \"game\",\n                    \"media\",\n                    \"player\",\n                    \"music\",\n                    \"video\",\n                    \"steam\"\n                ],\n                pathPatterns: [\n                    \"/Games\",\n                    \"/Applications/Games\"\n                ],\n                enabled: true\n            },\n            {\n                id: \"4\",\n                category: \"System Utilities\",\n                keywords: [\n                    \"system\",\n                    \"utility\",\n                    \"cleaner\",\n                    \"monitor\",\n                    \"backup\"\n                ],\n                pathPatterns: [\n                    \"/System\",\n                    \"/usr/bin\"\n                ],\n                enabled: true\n            }\n        ];\n    }\n}\nfunction categorizeFiles(files, rules) {\n    const categorized = {};\n    const uncategorized = [];\n    files.forEach((file)=>{\n        let assigned = false;\n        for (const rule of rules){\n            if (!rule.enabled) continue;\n            const fileName = file.name.toLowerCase();\n            const filePath = file.path.toLowerCase();\n            // Check keywords\n            const matchesKeyword = rule.keywords.some((keyword)=>fileName.includes(keyword.toLowerCase()));\n            // Check path patterns\n            const matchesPath = rule.pathPatterns.some((pattern)=>filePath.includes(pattern.toLowerCase()));\n            if (matchesKeyword || matchesPath) {\n                if (!categorized[rule.category]) {\n                    categorized[rule.category] = [];\n                }\n                categorized[rule.category].push({\n                    ...file,\n                    category: rule.category\n                });\n                assigned = true;\n                break;\n            }\n        }\n        if (!assigned) {\n            uncategorized.push({\n                ...file,\n                category: \"Uncategorized\"\n            });\n        }\n    });\n    if (uncategorized.length > 0) {\n        categorized[\"Uncategorized\"] = uncategorized;\n    }\n    return categorized;\n}\nasync function logOperation(message, level = \"INFO\") {\n    const timestamp = new Date().toISOString();\n    const logEntry = {\n        timestamp,\n        level,\n        message\n    };\n    try {\n        const dataDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\");\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.mkdir(dataDir, {\n            recursive: true\n        });\n        const logPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(dataDir, \"logs.json\");\n        let logs = [];\n        try {\n            const existingLogs = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(logPath, \"utf-8\");\n            logs = JSON.parse(existingLogs).logs || [];\n        } catch (error) {\n        // File doesn't exist, start with empty array\n        }\n        logs.push(logEntry);\n        // Keep only last 1000 log entries\n        if (logs.length > 1000) {\n            logs = logs.slice(-1000);\n        }\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.writeFile(logPath, JSON.stringify({\n            logs\n        }, null, 2));\n    } catch (error) {\n        console.error(\"Failed to write log:\", error);\n    }\n}\nasync function updateScanStats() {\n    try {\n        const dataDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\");\n        const statsPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(dataDir, \"system-stats.json\");\n        let stats = {\n            totalScans: 0,\n            storageSaved: 0,\n            autoScanEnabled: false,\n            autoScanInterval: 24\n        };\n        try {\n            const existingStats = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(statsPath, \"utf-8\");\n            stats = {\n                ...stats,\n                ...JSON.parse(existingStats)\n            };\n        } catch (error) {\n        // File doesn't exist, use defaults\n        }\n        stats.totalScans += 1;\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.writeFile(statsPath, JSON.stringify(stats, null, 2));\n    } catch (error) {\n        console.error(\"Failed to update scan stats:\", error);\n    }\n}\nasync function POST(request) {\n    try {\n        const { directory } = await request.json();\n        if (!directory || typeof directory !== \"string\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Valid directory path is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Clean and validate the directory path\n        const cleanDirectory = directory.replace(/^[\"']|[\"']$/g, \"\").trim();\n        if (!cleanDirectory) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Directory path cannot be empty\"\n            }, {\n                status: 400\n            });\n        }\n        await logOperation(`Starting scan of directory: ${cleanDirectory}`);\n        const startTime = Date.now();\n        try {\n            // Scan directory for application files\n            const files = await scanDirectory(cleanDirectory);\n            await logOperation(`Found ${files.length} application files`);\n            // Find duplicates\n            const duplicateGroups = findDuplicates(files);\n            await logOperation(`Detected ${duplicateGroups.length} duplicate groups`);\n            // Load rules and categorize files\n            const rules = await loadRules();\n            const categorizedFiles = categorizeFiles(files, rules);\n            await logOperation(`Categorized files into ${Object.keys(categorizedFiles).length} categories`);\n            const scanTime = (Date.now() - startTime) / 1000;\n            const result = {\n                totalFiles: files.length,\n                duplicateGroups,\n                categorizedFiles,\n                scanTime\n            };\n            // Save scan results\n            const dataDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\");\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.mkdir(dataDir, {\n                recursive: true\n            });\n            await fs__WEBPACK_IMPORTED_MODULE_1__.promises.writeFile(path__WEBPACK_IMPORTED_MODULE_2___default().join(dataDir, \"last-scan.json\"), JSON.stringify(result, null, 2));\n            // Update scan statistics\n            await updateScanStats();\n            await logOperation(`Scan completed in ${scanTime.toFixed(2)} seconds`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n        } catch (scanError) {\n            const errorMessage = scanError instanceof Error ? scanError.message : \"Scan operation failed\";\n            await logOperation(`Scan failed: ${errorMessage}`, \"ERROR\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: errorMessage\n            }, {\n                status: 400\n            });\n        }\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n        await logOperation(`Request processing failed: ${errorMessage}`, \"ERROR\");\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/scan/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();