"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/smart-suggestions/route";
exports.ids = ["app/api/smart-suggestions/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsmart-suggestions%2Froute&page=%2Fapi%2Fsmart-suggestions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmart-suggestions%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsmart-suggestions%2Froute&page=%2Fapi%2Fsmart-suggestions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmart-suggestions%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_gowda_OneDrive_Desktop_intelligent_app_manager_2_app_api_smart_suggestions_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/smart-suggestions/route.ts */ \"(rsc)/./app/api/smart-suggestions/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/smart-suggestions/route\",\n        pathname: \"/api/smart-suggestions\",\n        filename: \"route\",\n        bundlePath: \"app/api/smart-suggestions/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\gowda\\\\OneDrive\\\\Desktop\\\\intelligent-app-manager (2)\\\\app\\\\api\\\\smart-suggestions\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_gowda_OneDrive_Desktop_intelligent_app_manager_2_app_api_smart_suggestions_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/smart-suggestions/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzbWFydC1zdWdnZXN0aW9ucyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGc21hcnQtc3VnZ2VzdGlvbnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzbWFydC1zdWdnZXN0aW9ucyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNnb3dkYSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q2ludGVsbGlnZW50LWFwcC1tYW5hZ2VyJTIwKDIpJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNnb3dkYSU1Q09uZURyaXZlJTVDRGVza3RvcCU1Q2ludGVsbGlnZW50LWFwcC1tYW5hZ2VyJTIwKDIpJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN1RDtBQUNwSTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvPzVhNTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcZ293ZGFcXFxcT25lRHJpdmVcXFxcRGVza3RvcFxcXFxpbnRlbGxpZ2VudC1hcHAtbWFuYWdlciAoMilcXFxcYXBwXFxcXGFwaVxcXFxzbWFydC1zdWdnZXN0aW9uc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc21hcnQtc3VnZ2VzdGlvbnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zbWFydC1zdWdnZXN0aW9uc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc21hcnQtc3VnZ2VzdGlvbnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxnb3dkYVxcXFxPbmVEcml2ZVxcXFxEZXNrdG9wXFxcXGludGVsbGlnZW50LWFwcC1tYW5hZ2VyICgyKVxcXFxhcHBcXFxcYXBpXFxcXHNtYXJ0LXN1Z2dlc3Rpb25zXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zbWFydC1zdWdnZXN0aW9ucy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsmart-suggestions%2Froute&page=%2Fapi%2Fsmart-suggestions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmart-suggestions%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/smart-suggestions/route.ts":
/*!********************************************!*\
  !*** ./app/api/smart-suggestions/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction detectSimilarApps(files) {\n    const suggestions = [];\n    const appGroups = new Map();\n    // Group similar applications\n    files.forEach((file)=>{\n        const baseName = file.name.toLowerCase().replace(/\\d+/g, \"\") // Remove version numbers\n        .replace(/[._-]/g, \" \") // Normalize separators\n        .replace(/\\s+/g, \" \") // Normalize spaces\n        .trim();\n        if (!appGroups.has(baseName)) {\n            appGroups.set(baseName, []);\n        }\n        appGroups.get(baseName).push(file);\n    });\n    // Find groups with multiple versions\n    appGroups.forEach((groupFiles, baseName)=>{\n        if (groupFiles.length > 1) {\n            // Sort by file size (assuming larger = newer/more complete)\n            groupFiles.sort((a, b)=>b.size - a.size);\n            const keepFile = groupFiles[0];\n            const removeFiles = groupFiles.slice(1);\n            const suggestion = {\n                id: `version_consolidation_${Date.now()}_${Math.random()}`,\n                type: \"version_consolidation\",\n                title: `Multiple versions of ${baseName} detected`,\n                description: `Found ${groupFiles.length} versions of similar applications. Recommend keeping the largest/newest version.`,\n                files: [\n                    {\n                        path: keepFile.path,\n                        name: keepFile.name,\n                        size: keepFile.size,\n                        action: \"keep\",\n                        reason: \"Largest file size (likely newest version)\"\n                    },\n                    ...removeFiles.map((file)=>({\n                            path: file.path,\n                            name: file.name,\n                            size: file.size,\n                            action: \"remove\",\n                            reason: \"Older/smaller version\"\n                        }))\n                ],\n                potentialSavings: removeFiles.reduce((acc, file)=>acc + file.size, 0),\n                confidence: \"medium\",\n                priority: removeFiles.length * 10\n            };\n            suggestions.push(suggestion);\n        }\n    });\n    return suggestions;\n}\nfunction detectUnusedApps(files) {\n    const suggestions = [];\n    // In a real implementation, this would check actual usage data\n    // For now, we'll simulate based on file access times and common patterns\n    const potentiallyUnused = files.filter((file)=>{\n        const fileName = file.name.toLowerCase();\n        // Common patterns for potentially unused software\n        const unusedPatterns = [\n            \"trial\",\n            \"demo\",\n            \"temp\",\n            \"old\",\n            \"backup\",\n            \"copy\",\n            \"installer\",\n            \"setup\",\n            \"uninstall\"\n        ];\n        return unusedPatterns.some((pattern)=>fileName.includes(pattern));\n    });\n    if (potentiallyUnused.length > 0) {\n        const suggestion = {\n            id: `unused_cleanup_${Date.now()}`,\n            type: \"unused_cleanup\",\n            title: \"Potentially unused applications detected\",\n            description: `Found ${potentiallyUnused.length} applications that appear to be trials, demos, or temporary installations.`,\n            files: potentiallyUnused.map((file)=>({\n                    path: file.path,\n                    name: file.name,\n                    size: file.size,\n                    action: \"remove\",\n                    reason: \"Appears to be trial/demo/temporary software\"\n                })),\n            potentialSavings: potentiallyUnused.reduce((acc, file)=>acc + file.size, 0),\n            confidence: \"low\",\n            priority: 5\n        };\n        suggestions.push(suggestion);\n    }\n    return suggestions;\n}\nfunction detectRedundantApps(files) {\n    const suggestions = [];\n    // Define groups of applications that serve similar purposes\n    const redundantGroups = [\n        {\n            category: \"Media Players\",\n            apps: [\n                \"vlc\",\n                \"kmplayer\",\n                \"windows media player\",\n                \"quicktime\",\n                \"realplayer\"\n            ],\n            recommend: \"vlc\"\n        },\n        {\n            category: \"Web Browsers\",\n            apps: [\n                \"chrome\",\n                \"firefox\",\n                \"edge\",\n                \"safari\",\n                \"opera\",\n                \"internet explorer\"\n            ],\n            recommend: \"chrome\"\n        },\n        {\n            category: \"Text Editors\",\n            apps: [\n                \"notepad++\",\n                \"sublime\",\n                \"atom\",\n                \"brackets\",\n                \"notepad\"\n            ],\n            recommend: \"notepad++\"\n        },\n        {\n            category: \"Archive Tools\",\n            apps: [\n                \"winrar\",\n                \"7zip\",\n                \"winzip\",\n                \"peazip\"\n            ],\n            recommend: \"7zip\"\n        }\n    ];\n    redundantGroups.forEach((group)=>{\n        const foundApps = files.filter((file)=>group.apps.some((app)=>file.name.toLowerCase().includes(app)));\n        if (foundApps.length > 1) {\n            const recommendedApp = foundApps.find((file)=>file.name.toLowerCase().includes(group.recommend)) || foundApps[0];\n            const redundantApps = foundApps.filter((file)=>file !== recommendedApp);\n            if (redundantApps.length > 0) {\n                const suggestion = {\n                    id: `redundant_${group.category.replace(/\\s+/g, \"_\")}_${Date.now()}`,\n                    type: \"duplicate_removal\",\n                    title: `Multiple ${group.category} detected`,\n                    description: `Found ${foundApps.length} ${group.category.toLowerCase()}. Recommend keeping ${group.recommend} and removing others.`,\n                    files: [\n                        {\n                            path: recommendedApp.path,\n                            name: recommendedApp.name,\n                            size: recommendedApp.size,\n                            action: \"keep\",\n                            reason: `Recommended ${group.category.toLowerCase()}`\n                        },\n                        ...redundantApps.map((file)=>({\n                                path: file.path,\n                                name: file.name,\n                                size: file.size,\n                                action: \"remove\",\n                                reason: \"Redundant application\"\n                            }))\n                    ],\n                    potentialSavings: redundantApps.reduce((acc, file)=>acc + file.size, 0),\n                    confidence: \"high\",\n                    priority: redundantApps.length * 15\n                };\n                suggestions.push(suggestion);\n            }\n        }\n    });\n    return suggestions;\n}\nasync function GET() {\n    try {\n        // Load last scan results\n        const dataDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\");\n        const scanResultPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(dataDir, \"last-scan.json\");\n        let scanResult;\n        try {\n            const scanData = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(scanResultPath, \"utf-8\");\n            scanResult = JSON.parse(scanData);\n        } catch (error) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                suggestions: []\n            });\n        }\n        const allFiles = Object.values(scanResult.categorizedFiles || {}).flat();\n        if (allFiles.length === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                suggestions: []\n            });\n        }\n        // Generate different types of suggestions\n        const suggestions = [\n            ...detectSimilarApps(allFiles),\n            ...detectUnusedApps(allFiles),\n            ...detectRedundantApps(allFiles)\n        ];\n        // Sort by priority (highest first)\n        suggestions.sort((a, b)=>b.priority - a.priority);\n        const summary = {\n            totalSuggestions: suggestions.length,\n            totalPotentialSavings: suggestions.reduce((acc, s)=>acc + s.potentialSavings, 0),\n            highConfidence: suggestions.filter((s)=>s.confidence === \"high\").length,\n            mediumConfidence: suggestions.filter((s)=>s.confidence === \"medium\").length,\n            lowConfidence: suggestions.filter((s)=>s.confidence === \"low\").length\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            suggestions: suggestions.slice(0, 20),\n            summary\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to generate smart suggestions\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { suggestionId, action } = await request.json();\n        if (!suggestionId || !action) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Suggestion ID and action are required\"\n            }, {\n                status: 400\n            });\n        }\n        // In a real implementation, you'd execute the suggested action\n        // For now, just log the action\n        const timestamp = new Date().toISOString();\n        const logEntry = {\n            timestamp,\n            level: \"INFO\",\n            message: `Smart suggestion ${suggestionId} ${action} by user`\n        };\n        // Log the action\n        const dataDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\");\n        const logPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(dataDir, \"logs.json\");\n        let logs = [];\n        try {\n            const existingLogs = await fs__WEBPACK_IMPORTED_MODULE_1__.promises.readFile(logPath, \"utf-8\");\n            logs = JSON.parse(existingLogs).logs || [];\n        } catch (error) {\n        // File doesn't exist, start with empty array\n        }\n        logs.push(logEntry);\n        if (logs.length > 1000) {\n            logs = logs.slice(-1000);\n        }\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.writeFile(logPath, JSON.stringify({\n            logs\n        }, null, 2));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `Suggestion ${action} successfully`\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to process suggestion action\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NtYXJ0LXN1Z2dlc3Rpb25zL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBdUQ7QUFDcEI7QUFDWjtBQW1CdkIsU0FBU0ksa0JBQWtCQyxLQUFZO0lBQ3JDLE1BQU1DLGNBQWlDLEVBQUU7SUFDekMsTUFBTUMsWUFBWSxJQUFJQztJQUV0Qiw2QkFBNkI7SUFDN0JILE1BQU1JLE9BQU8sQ0FBQ0MsQ0FBQUE7UUFDWixNQUFNQyxXQUFXRCxLQUFLRSxJQUFJLENBQUNDLFdBQVcsR0FDbkNDLE9BQU8sQ0FBQyxRQUFRLElBQUkseUJBQXlCO1NBQzdDQSxPQUFPLENBQUMsVUFBVSxLQUFLLHVCQUF1QjtTQUM5Q0EsT0FBTyxDQUFDLFFBQVEsS0FBSyxtQkFBbUI7U0FDeENDLElBQUk7UUFFUCxJQUFJLENBQUNSLFVBQVVTLEdBQUcsQ0FBQ0wsV0FBVztZQUM1QkosVUFBVVUsR0FBRyxDQUFDTixVQUFVLEVBQUU7UUFDNUI7UUFDQUosVUFBVVcsR0FBRyxDQUFDUCxVQUFXUSxJQUFJLENBQUNUO0lBQ2hDO0lBRUEscUNBQXFDO0lBQ3JDSCxVQUFVRSxPQUFPLENBQUMsQ0FBQ1csWUFBWVQ7UUFDN0IsSUFBSVMsV0FBV0MsTUFBTSxHQUFHLEdBQUc7WUFDekIsNERBQTREO1lBQzVERCxXQUFXRSxJQUFJLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTUEsRUFBRUMsSUFBSSxHQUFHRixFQUFFRSxJQUFJO1lBRXpDLE1BQU1DLFdBQVdOLFVBQVUsQ0FBQyxFQUFFO1lBQzlCLE1BQU1PLGNBQWNQLFdBQVdRLEtBQUssQ0FBQztZQUVyQyxNQUFNQyxhQUE4QjtnQkFDbENDLElBQUksQ0FBQyxzQkFBc0IsRUFBRUMsS0FBS0MsR0FBRyxHQUFHLENBQUMsRUFBRUMsS0FBS0MsTUFBTSxHQUFHLENBQUM7Z0JBQzFEQyxNQUFNO2dCQUNOQyxPQUFPLENBQUMscUJBQXFCLEVBQUV6QixTQUFTLFNBQVMsQ0FBQztnQkFDbEQwQixhQUFhLENBQUMs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RXZELE9BQU8sUUFBUSxDQUFDO1FBQy9EO1FBRUEsaUJBQWlCO1FBQ2pCLE1BQU00QixVQUFVL0QsZ0RBQVMsQ0FBQ2lFLFFBQVFDLEdBQUcsSUFBSTtRQUN6QyxNQUFNOEIsVUFBVWhHLGdEQUFTLENBQUMrRCxTQUFTO1FBRW5DLElBQUlrQyxPQUFPLEVBQUU7UUFDYixJQUFJO1lBQ0YsTUFBTUMsZUFBZSxNQUFNbkcsd0NBQUVBLENBQUN1RSxRQUFRLENBQUMwQixTQUFTO1lBQ2hEQyxPQUFPMUIsS0FBS0MsS0FBSyxDQUFDMEIsY0FBY0QsSUFBSSxJQUFJLEVBQUU7UUFDNUMsRUFBRSxPQUFPeEIsT0FBTztRQUNkLDZDQUE2QztRQUMvQztRQUVBd0IsS0FBS2pGLElBQUksQ0FBQzZFO1FBRVYsSUFBSUksS0FBSy9FLE1BQU0sR0FBRyxNQUFNO1lBQ3RCK0UsT0FBT0EsS0FBS3hFLEtBQUssQ0FBQyxDQUFDO1FBQ3JCO1FBRUEsTUFBTTFCLHdDQUFFQSxDQUFDb0csU0FBUyxDQUFDSCxTQUFTekIsS0FBSzZCLFNBQVMsQ0FBQztZQUFFSDtRQUFLLEdBQUcsTUFBTTtRQUUzRCxPQUFPcEcscURBQVlBLENBQUM2RSxJQUFJLENBQUM7WUFDdkIyQixTQUFTO1lBQ1ROLFNBQVMsQ0FBQyxXQUFXLEVBQUU1RCxPQUFPLGFBQWEsQ0FBQztRQUM5QztJQUNGLEVBQUUsT0FBT3NDLE9BQU87UUFDZCxPQUFPNUUscURBQVlBLENBQUM2RSxJQUFJLENBQ3RCO1lBQUVELE9BQU87UUFBc0MsR0FDL0M7WUFBRWMsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vYXBwL2FwaS9zbWFydC1zdWdnZXN0aW9ucy9yb3V0ZS50cz81NjAxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IHByb21pc2VzIGFzIGZzIH0gZnJvbSAnZnMnXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuXG5pbnRlcmZhY2UgU21hcnRTdWdnZXN0aW9uIHtcbiAgaWQ6IHN0cmluZ1xuICB0eXBlOiAnZHVwbGljYXRlX3JlbW92YWwnIHwgJ3ZlcnNpb25fY29uc29saWRhdGlvbicgfCAndW51c2VkX2NsZWFudXAnIHwgJ2NhdGVnb3J5X29wdGltaXphdGlvbidcbiAgdGl0bGU6IHN0cmluZ1xuICBkZXNjcmlwdGlvbjogc3RyaW5nXG4gIGZpbGVzOiBBcnJheTx7XG4gICAgcGF0aDogc3RyaW5nXG4gICAgbmFtZTogc3RyaW5nXG4gICAgc2l6ZTogbnVtYmVyXG4gICAgYWN0aW9uOiAna2VlcCcgfCAncmVtb3ZlJyB8ICd1cGRhdGUnXG4gICAgcmVhc29uOiBzdHJpbmdcbiAgfT5cbiAgcG90ZW50aWFsU2F2aW5nczogbnVtYmVyXG4gIGNvbmZpZGVuY2U6ICdoaWdoJyB8ICdtZWRpdW0nIHwgJ2xvdydcbiAgcHJpb3JpdHk6IG51bWJlclxufVxuXG5mdW5jdGlvbiBkZXRlY3RTaW1pbGFyQXBwcyhmaWxlczogYW55W10pOiBTbWFydFN1Z2dlc3Rpb25bXSB7XG4gIGNvbnN0IHN1Z2dlc3Rpb25zOiBTbWFydFN1Z2dlc3Rpb25bXSA9IFtdXG4gIGNvbnN0IGFwcEdyb3VwcyA9IG5ldyBNYXA8c3RyaW5nLCBhbnlbXT4oKVxuICBcbiAgLy8gR3JvdXAgc2ltaWxhciBhcHBsaWNhdGlvbnNcbiAgZmlsZXMuZm9yRWFjaChmaWxlID0+IHtcbiAgICBjb25zdCBiYXNlTmFtZSA9IGZpbGUubmFtZS50b0xvd2VyQ2FzZSgpXG4gICAgICAucmVwbGFjZSgvXFxkKy9nLCAnJykgLy8gUmVtb3ZlIHZlcnNpb24gbnVtYmVyc1xuICAgICAgLnJlcGxhY2UoL1suXy1dL2csICcgJykgLy8gTm9ybWFsaXplIHNlcGFyYXRvcnNcbiAgICAgIC5yZXBsYWNlKC9cXHMrL2csICcgJykgLy8gTm9ybWFsaXplIHNwYWNlc1xuICAgICAgLnRyaW0oKVxuICAgIFxuICAgIGlmICghYXBwR3JvdXBzLmhhcyhiYXNlTmFtZSkpIHtcbiAgICAgIGFwcEdyb3Vwcy5zZXQoYmFzZU5hbWUsIFtdKVxuICAgIH1cbiAgICBhcHBHcm91cHMuZ2V0KGJhc2VOYW1lKSEucHVzaChmaWxlKVxuICB9KVxuICBcbiAgLy8gRmluZCBncm91cHMgd2l0aCBtdWx0aXBsZSB2ZXJzaW9uc1xuICBhcHBHcm91cHMuZm9yRWFjaCgoZ3JvdXBGaWxlcywgYmFzZU5hbWUpID0+IHtcbiAgICBpZiAoZ3JvdXBGaWxlcy5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBTb3J0IGJ5IGZpbGUgc2l6ZSAoYXNzdW1pbmcgbGFyZ2VyID0gbmV3ZXIvbW9yZSBjb21wbGV0ZSlcbiAgICAgIGdyb3VwRmlsZXMuc29ydCgoYSwgYikgPT4gYi5zaXplIC0gYS5zaXplKVxuICAgICAgXG4gICAgICBjb25zdCBrZWVwRmlsZSA9IGdyb3VwRmlsZXNbMF1cbiAgICAgIGNvbnN0IHJlbW92ZUZpbGVzID0gZ3JvdXBGaWxlcy5zbGljZSgxKVxuICAgICAgXG4gICAgICBjb25zdCBzdWdnZXN0aW9uOiBTbWFydFN1Z2dlc3Rpb24gPSB7XG4gICAgICAgIGlkOiBgdmVyc2lvbl9jb25zb2xpZGF0aW9uXyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpfWAsXG4gICAgICAgIHR5cGU6ICd2ZXJzaW9uX2NvbnNvbGlkYXRpb24nLFxuICAgICAgICB0aXRsZTogYE11bHRpcGxlIHZlcnNpb25zIG9mICR7YmFzZU5hbWV9IGRldGVjdGVkYCxcbiAgICAgICAgZGVzY3JpcHRpb246IGBGb3VuZCAke2dyb3VwRmlsZXMubGVuZ3RofSB2ZXJzaW9ucyBvZiBzaW1pbGFyIGFwcGxpY2F0aW9ucy4gUmVjb21tZW5kIGtlZXBpbmcgdGhlIGxhcmdlc3QvbmV3ZXN0IHZlcnNpb24uYCxcbiAgICAgICAgZmlsZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwYXRoOiBrZWVwRmlsZS5wYXRoLFxuICAgICAgICAgICAgbmFtZToga2VlcEZpbGUubmFtZSxcbiAgICAgICAgICAgIHNpemU6IGtlZXBGaWxlLnNpemUsXG4gICAgICAgICAgICBhY3Rpb246ICdrZWVwJyxcbiAgICAgICAgICAgIHJlYXNvbjogJ0xhcmdlc3QgZmlsZSBzaXplIChsaWtlbHkgbmV3ZXN0IHZlcnNpb24pJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgLi4ucmVtb3ZlRmlsZXMubWFwKGZpbGUgPT4gKHtcbiAgICAgICAgICAgIHBhdGg6IGZpbGUucGF0aCxcbiAgICAgICAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICAgIHNpemU6IGZpbGUuc2l6ZSxcbiAgICAgICAgICAgIGFjdGlvbjogJ3JlbW92ZScgYXMgY29uc3QsXG4gICAgICAgICAgICByZWFzb246ICdPbGRlci9zbWFsbGVyIHZlcnNpb24nXG4gICAgICAgICAgfSkpXG4gICAgICAgIF0sXG4gICAgICAgIHBvdGVudGlhbFNhdmluZ3M6IHJlbW92ZUZpbGVzLnJlZHVjZSgoYWNjLCBmaWxlKSA9PiBhY2MgKyBmaWxlLnNpemUsIDApLFxuICAgICAgICBjb25maWRlbmNlOiAnbWVkaXVtJyxcbiAgICAgICAgcHJpb3JpdHk6IHJlbW92ZUZpbGVzLmxlbmd0aCAqIDEwXG4gICAgICB9XG4gICAgICBcbiAgICAgIHN1Z2dlc3Rpb25zLnB1c2goc3VnZ2VzdGlvbilcbiAgICB9XG4gIH0pXG4gIFxuICByZXR1cm4gc3VnZ2VzdGlvbnNcbn1cblxuZnVuY3Rpb24gZGV0ZWN0VW51c2VkQXBwcyhmaWxlczogYW55W10pOiBTbWFydFN1Z2dlc3Rpb25bXSB7XG4gIGNvbnN0IHN1Z2dlc3Rpb25zOiBTbWFydFN1Z2dlc3Rpb25bXSA9IFtdXG4gIFxuICAvLyBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHRoaXMgd291bGQgY2hlY2sgYWN0dWFsIHVzYWdlIGRhdGFcbiAgLy8gRm9yIG5vdywgd2UnbGwgc2ltdWxhdGUgYmFzZWQgb24gZmlsZSBhY2Nlc3MgdGltZXMgYW5kIGNvbW1vbiBwYXR0ZXJuc1xuICBjb25zdCBwb3RlbnRpYWxseVVudXNlZCA9IGZpbGVzLmZpbHRlcihmaWxlID0+IHtcbiAgICBjb25zdCBmaWxlTmFtZSA9IGZpbGUubmFtZS50b0xvd2VyQ2FzZSgpXG4gICAgXG4gICAgLy8gQ29tbW9uIHBhdHRlcm5zIGZvciBwb3RlbnRpYWxseSB1bnVzZWQgc29mdHdhcmVcbiAgICBjb25zdCB1bnVzZWRQYXR0ZXJucyA9IFtcbiAgICAgICd0cmlhbCcsICdkZW1vJywgJ3RlbXAnLCAnb2xkJywgJ2JhY2t1cCcsICdjb3B5JyxcbiAgICAgICdpbnN0YWxsZXInLCAnc2V0dXAnLCAndW5pbnN0YWxsJ1xuICAgIF1cbiAgICBcbiAgICByZXR1cm4gdW51c2VkUGF0dGVybnMuc29tZShwYXR0ZXJuID0+IGZpbGVOYW1lLmluY2x1ZGVzKHBhdHRlcm4pKVxuICB9KVxuICBcbiAgaWYgKHBvdGVudGlhbGx5VW51c2VkLmxlbmd0aCA+IDApIHtcbiAgICBjb25zdCBzdWdnZXN0aW9uOiBTbWFydFN1Z2dlc3Rpb24gPSB7XG4gICAgICBpZDogYHVudXNlZF9jbGVhbnVwXyR7RGF0ZS5ub3coKX1gLFxuICAgICAgdHlwZTogJ3VudXNlZF9jbGVhbnVwJyxcbiAgICAgIHRpdGxlOiAnUG90ZW50aWFsbHkgdW51c2VkIGFwcGxpY2F0aW9ucyBkZXRlY3RlZCcsXG4gICAgICBkZXNjcmlwdGlvbjogYEZvdW5kICR7cG90ZW50aWFsbHlVbnVzZWQubGVuZ3RofSBhcHBsaWNhdGlvbnMgdGhhdCBhcHBlYXIgdG8gYmUgdHJpYWxzLCBkZW1vcywgb3IgdGVtcG9yYXJ5IGluc3RhbGxhdGlvbnMuYCxcbiAgICAgIGZpbGVzOiBwb3RlbnRpYWxseVVudXNlZC5tYXAoZmlsZSA9PiAoe1xuICAgICAgICBwYXRoOiBmaWxlLnBhdGgsXG4gICAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgc2l6ZTogZmlsZS5zaXplLFxuICAgICAgICBhY3Rpb246ICdyZW1vdmUnIGFzIGNvbnN0LFxuICAgICAgICByZWFzb246ICdBcHBlYXJzIHRvIGJlIHRyaWFsL2RlbW8vdGVtcG9yYXJ5IHNvZnR3YXJlJ1xuICAgICAgfSkpLFxuICAgICAgcG90ZW50aWFsU2F2aW5nczogcG90ZW50aWFsbHlVbnVzZWQucmVkdWNlKChhY2MsIGZpbGUpID0+IGFjYyArIGZpbGUuc2l6ZSwgMCksXG4gICAgICBjb25maWRlbmNlOiAnbG93JyxcbiAgICAgIHByaW9yaXR5OiA1XG4gICAgfVxuICAgIFxuICAgIHN1Z2dlc3Rpb25zLnB1c2goc3VnZ2VzdGlvbilcbiAgfVxuICBcbiAgcmV0dXJuIHN1Z2dlc3Rpb25zXG59XG5cbmZ1bmN0aW9uIGRldGVjdFJlZHVuZGFudEFwcHMoZmlsZXM6IGFueVtdKTogU21hcnRTdWdnZXN0aW9uW10ge1xuICBjb25zdCBzdWdnZXN0aW9uczogU21hcnRTdWdnZXN0aW9uW10gPSBbXVxuICBcbiAgLy8gRGVmaW5lIGdyb3VwcyBvZiBhcHBsaWNhdGlvbnMgdGhhdCBzZXJ2ZSBzaW1pbGFyIHB1cnBvc2VzXG4gIGNvbnN0IHJlZHVuZGFudEdyb3VwcyA9IFtcbiAgICB7XG4gICAgICBjYXRlZ29yeTogJ01lZGlhIFBsYXllcnMnLFxuICAgICAgYXBwczogWyd2bGMnLCAna21wbGF5ZXInLCAnd2luZG93cyBtZWRpYSBwbGF5ZXInLCAncXVpY2t0aW1lJywgJ3JlYWxwbGF5ZXInXSxcbiAgICAgIHJlY29tbWVuZDogJ3ZsYydcbiAgICB9LFxuICAgIHtcbiAgICAgIGNhdGVnb3J5OiAnV2ViIEJyb3dzZXJzJyxcbiAgICAgIGFwcHM6IFsnY2hyb21lJywgJ2ZpcmVmb3gnLCAnZWRnZScsICdzYWZhcmknLCAnb3BlcmEnLCAnaW50ZXJuZXQgZXhwbG9yZXInXSxcbiAgICAgIHJlY29tbWVuZDogJ2Nocm9tZSdcbiAgICB9LFxuICAgIHtcbiAgICAgIGNhdGVnb3J5OiAnVGV4dCBFZGl0b3JzJyxcbiAgICAgIGFwcHM6IFsnbm90ZXBhZCsrJywgJ3N1YmxpbWUnLCAnYXRvbScsICdicmFja2V0cycsICdub3RlcGFkJ10sXG4gICAgICByZWNvbW1lbmQ6ICdub3RlcGFkKysnXG4gICAgfSxcbiAgICB7XG4gICAgICBjYXRlZ29yeTogJ0FyY2hpdmUgVG9vbHMnLFxuICAgICAgYXBwczogWyd3aW5yYXInLCAnN3ppcCcsICd3aW56aXAnLCAncGVhemlwJ10sXG4gICAgICByZWNvbW1lbmQ6ICc3emlwJ1xuICAgIH1cbiAgXVxuICBcbiAgcmVkdW5kYW50R3JvdXBzLmZvckVhY2goZ3JvdXAgPT4ge1xuICAgIGNvbnN0IGZvdW5kQXBwcyA9IGZpbGVzLmZpbHRlcihmaWxlID0+IFxuICAgICAgZ3JvdXAuYXBwcy5zb21lKGFwcCA9PiBmaWxlLm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhhcHApKVxuICAgIClcbiAgICBcbiAgICBpZiAoZm91bmRBcHBzLmxlbmd0aCA+IDEpIHtcbiAgICAgIGNvbnN0IHJlY29tbWVuZGVkQXBwID0gZm91bmRBcHBzLmZpbmQoZmlsZSA9PiBcbiAgICAgICAgZmlsZS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoZ3JvdXAucmVjb21tZW5kKVxuICAgICAgKSB8fCBmb3VuZEFwcHNbMF1cbiAgICAgIFxuICAgICAgY29uc3QgcmVkdW5kYW50QXBwcyA9IGZvdW5kQXBwcy5maWx0ZXIoZmlsZSA9PiBmaWxlICE9PSByZWNvbW1lbmRlZEFwcClcbiAgICAgIFxuICAgICAgaWYgKHJlZHVuZGFudEFwcHMubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBzdWdnZXN0aW9uOiBTbWFydFN1Z2dlc3Rpb24gPSB7XG4gICAgICAgICAgaWQ6IGByZWR1bmRhbnRfJHtncm91cC5jYXRlZ29yeS5yZXBsYWNlKC9cXHMrL2csICdfJyl9XyR7RGF0ZS5ub3coKX1gLFxuICAgICAgICAgIHR5cGU6ICdkdXBsaWNhdGVfcmVtb3ZhbCcsXG4gICAgICAgICAgdGl0bGU6IGBNdWx0aXBsZSAke2dyb3VwLmNhdGVnb3J5fSBkZXRlY3RlZGAsXG4gICAgICAgICAgZGVzY3JpcHRpb246IGBGb3VuZCAke2ZvdW5kQXBwcy5sZW5ndGh9ICR7Z3JvdXAuY2F0ZWdvcnkudG9Mb3dlckNhc2UoKX0uIFJlY29tbWVuZCBrZWVwaW5nICR7Z3JvdXAucmVjb21tZW5kfSBhbmQgcmVtb3Zpbmcgb3RoZXJzLmAsXG4gICAgICAgICAgZmlsZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcGF0aDogcmVjb21tZW5kZWRBcHAucGF0aCxcbiAgICAgICAgICAgICAgbmFtZTogcmVjb21tZW5kZWRBcHAubmFtZSxcbiAgICAgICAgICAgICAgc2l6ZTogcmVjb21tZW5kZWRBcHAuc2l6ZSxcbiAgICAgICAgICAgICAgYWN0aW9uOiAna2VlcCcsXG4gICAgICAgICAgICAgIHJlYXNvbjogYFJlY29tbWVuZGVkICR7Z3JvdXAuY2F0ZWdvcnkudG9Mb3dlckNhc2UoKX1gXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLi4ucmVkdW5kYW50QXBwcy5tYXAoZmlsZSA9PiAoe1xuICAgICAgICAgICAgICBwYXRoOiBmaWxlLnBhdGgsXG4gICAgICAgICAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICAgICAgc2l6ZTogZmlsZS5zaXplLFxuICAgICAgICAgICAgICBhY3Rpb246ICdyZW1vdmUnIGFzIGNvbnN0LFxuICAgICAgICAgICAgICByZWFzb246ICdSZWR1bmRhbnQgYXBwbGljYXRpb24nXG4gICAgICAgICAgICB9KSlcbiAgICAgICAgICBdLFxuICAgICAgICAgIHBvdGVudGlhbFNhdmluZ3M6IHJlZHVuZGFudEFwcHMucmVkdWNlKChhY2MsIGZpbGUpID0+IGFjYyArIGZpbGUuc2l6ZSwgMCksXG4gICAgICAgICAgY29uZmlkZW5jZTogJ2hpZ2gnLFxuICAgICAgICAgIHByaW9yaXR5OiByZWR1bmRhbnRBcHBzLmxlbmd0aCAqIDE1XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHN1Z2dlc3Rpb25zLnB1c2goc3VnZ2VzdGlvbilcbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIFxuICByZXR1cm4gc3VnZ2VzdGlvbnNcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcbiAgdHJ5IHtcbiAgICAvLyBMb2FkIGxhc3Qgc2NhbiByZXN1bHRzXG4gICAgY29uc3QgZGF0YURpciA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnZGF0YScpXG4gICAgY29uc3Qgc2NhblJlc3VsdFBhdGggPSBwYXRoLmpvaW4oZGF0YURpciwgJ2xhc3Qtc2Nhbi5qc29uJylcbiAgICBcbiAgICBsZXQgc2NhblJlc3VsdFxuICAgIHRyeSB7XG4gICAgICBjb25zdCBzY2FuRGF0YSA9IGF3YWl0IGZzLnJlYWRGaWxlKHNjYW5SZXN1bHRQYXRoLCAndXRmLTgnKVxuICAgICAgc2NhblJlc3VsdCA9IEpTT04ucGFyc2Uoc2NhbkRhdGEpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Z2dlc3Rpb25zOiBbXSB9KVxuICAgIH1cbiAgICBcbiAgICBjb25zdCBhbGxGaWxlcyA9IE9iamVjdC52YWx1ZXMoc2NhblJlc3VsdC5jYXRlZ29yaXplZEZpbGVzIHx8IHt9KS5mbGF0KCkgYXMgYW55W11cbiAgICBcbiAgICBpZiAoYWxsRmlsZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWdnZXN0aW9uczogW10gfSlcbiAgICB9XG4gICAgXG4gICAgLy8gR2VuZXJhdGUgZGlmZmVyZW50IHR5cGVzIG9mIHN1Z2dlc3Rpb25zXG4gICAgY29uc3Qgc3VnZ2VzdGlvbnM6IFNtYXJ0U3VnZ2VzdGlvbltdID0gW1xuICAgICAgLi4uZGV0ZWN0U2ltaWxhckFwcHMoYWxsRmlsZXMpLFxuICAgICAgLi4uZGV0ZWN0VW51c2VkQXBwcyhhbGxGaWxlcyksXG4gICAgICAuLi5kZXRlY3RSZWR1bmRhbnRBcHBzKGFsbEZpbGVzKVxuICAgIF1cbiAgICBcbiAgICAvLyBTb3J0IGJ5IHByaW9yaXR5IChoaWdoZXN0IGZpcnN0KVxuICAgIHN1Z2dlc3Rpb25zLnNvcnQoKGEsIGIpID0+IGIucHJpb3JpdHkgLSBhLnByaW9yaXR5KVxuICAgIFxuICAgIGNvbnN0IHN1bW1hcnkgPSB7XG4gICAgICB0b3RhbFN1Z2dlc3Rpb25zOiBzdWdnZXN0aW9ucy5sZW5ndGgsXG4gICAgICB0b3RhbFBvdGVudGlhbFNhdmluZ3M6IHN1Z2dlc3Rpb25zLnJlZHVjZSgoYWNjLCBzKSA9PiBhY2MgKyBzLnBvdGVudGlhbFNhdmluZ3MsIDApLFxuICAgICAgaGlnaENvbmZpZGVuY2U6IHN1Z2dlc3Rpb25zLmZpbHRlcihzID0+IHMuY29uZmlkZW5jZSA9PT0gJ2hpZ2gnKS5sZW5ndGgsXG4gICAgICBtZWRpdW1Db25maWRlbmNlOiBzdWdnZXN0aW9ucy5maWx0ZXIocyA9PiBzLmNvbmZpZGVuY2UgPT09ICdtZWRpdW0nKS5sZW5ndGgsXG4gICAgICBsb3dDb25maWRlbmNlOiBzdWdnZXN0aW9ucy5maWx0ZXIocyA9PiBzLmNvbmZpZGVuY2UgPT09ICdsb3cnKS5sZW5ndGhcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Z2dlc3Rpb25zOiBzdWdnZXN0aW9ucy5zbGljZSgwLCAyMCksIC8vIExpbWl0IHRvIHRvcCAyMCBzdWdnZXN0aW9uc1xuICAgICAgc3VtbWFyeVxuICAgIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0ZhaWxlZCB0byBnZW5lcmF0ZSBzbWFydCBzdWdnZXN0aW9ucycgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgc3VnZ2VzdGlvbklkLCBhY3Rpb24gfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXG4gICAgXG4gICAgaWYgKCFzdWdnZXN0aW9uSWQgfHwgIWFjdGlvbikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnU3VnZ2VzdGlvbiBJRCBhbmQgYWN0aW9uIGFyZSByZXF1aXJlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApXG4gICAgfVxuICAgIFxuICAgIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgeW91J2QgZXhlY3V0ZSB0aGUgc3VnZ2VzdGVkIGFjdGlvblxuICAgIC8vIEZvciBub3csIGp1c3QgbG9nIHRoZSBhY3Rpb25cbiAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICBjb25zdCBsb2dFbnRyeSA9IHtcbiAgICAgIHRpbWVzdGFtcCxcbiAgICAgIGxldmVsOiAnSU5GTycsXG4gICAgICBtZXNzYWdlOiBgU21hcnQgc3VnZ2VzdGlvbiAke3N1Z2dlc3Rpb25JZH0gJHthY3Rpb259IGJ5IHVzZXJgXG4gICAgfVxuICAgIFxuICAgIC8vIExvZyB0aGUgYWN0aW9uXG4gICAgY29uc3QgZGF0YURpciA9IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnZGF0YScpXG4gICAgY29uc3QgbG9nUGF0aCA9IHBhdGguam9pbihkYXRhRGlyLCAnbG9ncy5qc29uJylcbiAgICBcbiAgICBsZXQgbG9ncyA9IFtdXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV4aXN0aW5nTG9ncyA9IGF3YWl0IGZzLnJlYWRGaWxlKGxvZ1BhdGgsICd1dGYtOCcpXG4gICAgICBsb2dzID0gSlNPTi5wYXJzZShleGlzdGluZ0xvZ3MpLmxvZ3MgfHwgW11cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gRmlsZSBkb2Vzbid0IGV4aXN0LCBzdGFydCB3aXRoIGVtcHR5IGFycmF5XG4gICAgfVxuICAgIFxuICAgIGxvZ3MucHVzaChsb2dFbnRyeSlcbiAgICBcbiAgICBpZiAobG9ncy5sZW5ndGggPiAxMDAwKSB7XG4gICAgICBsb2dzID0gbG9ncy5zbGljZSgtMTAwMClcbiAgICB9XG4gICAgXG4gICAgYXdhaXQgZnMud3JpdGVGaWxlKGxvZ1BhdGgsIEpTT04uc3RyaW5naWZ5KHsgbG9ncyB9LCBudWxsLCAyKSlcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6IGBTdWdnZXN0aW9uICR7YWN0aW9ufSBzdWNjZXNzZnVsbHlgXG4gICAgfSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIHByb2Nlc3Mgc3VnZ2VzdGlvbiBhY3Rpb24nIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJwcm9taXNlcyIsImZzIiwicGF0aCIsImRldGVjdFNpbWlsYXJBcHBzIiwiZmlsZXMiLCJzdWdnZXN0aW9ucyIsImFwcEdyb3VwcyIsIk1hcCIsImZvckVhY2giLCJmaWxlIiwiYmFzZU5hbWUiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwidHJpbSIsImhhcyIsInNldCIsImdldCIsInB1c2giLCJncm91cEZpbGVzIiwibGVuZ3RoIiwic29ydCIsImEiLCJiIiwic2l6ZSIsImtlZXBGaWxlIiwicmVtb3ZlRmlsZXMiLCJzbGljZSIsInN1Z2dlc3Rpb24iLCJpZCIsIkRhdGUiLCJub3ciLCJNYXRoIiwicmFuZG9tIiwidHlwZSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhY3Rpb24iLCJyZWFzb24iLCJtYXAiLCJwb3RlbnRpYWxTYXZpbmdzIiwicmVkdWNlIiwiYWNjIiwiY29uZmlkZW5jZSIsInByaW9yaXR5IiwiZGV0ZWN0VW51c2VkQXBwcyIsInBvdGVudGlhbGx5VW51c2VkIiwiZmlsdGVyIiwiZmlsZU5hbWUiLCJ1bnVzZWRQYXR0ZXJucyIsInNvbWUiLCJwYXR0ZXJuIiwiaW5jbHVkZXMiLCJkZXRlY3RSZWR1bmRhbnRBcHBzIiwicmVkdW5kYW50R3JvdXBzIiwiY2F0ZWdvcnkiLCJhcHBzIiwicmVjb21tZW5kIiwiZ3JvdXAiLCJmb3VuZEFwcHMiLCJhcHAiLCJyZWNvbW1lbmRlZEFwcCIsImZpbmQiLCJyZWR1bmRhbnRBcHBzIiwiR0VUIiwiZGF0YURpciIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwic2NhblJlc3VsdFBhdGgiLCJzY2FuUmVzdWx0Iiwic2NhbkRhdGEiLCJyZWFkRmlsZSIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwianNvbiIsImFsbEZpbGVzIiwiT2JqZWN0IiwidmFsdWVzIiwiY2F0ZWdvcml6ZWRGaWxlcyIsImZsYXQiLCJzdW1tYXJ5IiwidG90YWxTdWdnZXN0aW9ucyIsInRvdGFsUG90ZW50aWFsU2F2aW5ncyIsInMiLCJoaWdoQ29uZmlkZW5jZSIsIm1lZGl1bUNvbmZpZGVuY2UiLCJsb3dDb25maWRlbmNlIiwic3RhdHVzIiwiUE9TVCIsInJlcXVlc3QiLCJzdWdnZXN0aW9uSWQiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsImxvZ0VudHJ5IiwibGV2ZWwiLCJtZXNzYWdlIiwibG9nUGF0aCIsImxvZ3MiLCJleGlzdGluZ0xvZ3MiLCJ3cml0ZUZpbGUiLCJzdHJpbmdpZnkiLCJzdWNjZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/smart-suggestions/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsmart-suggestions%2Froute&page=%2Fapi%2Fsmart-suggestions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsmart-suggestions%2Froute.ts&appDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cgowda%5COneDrive%5CDesktop%5Cintelligent-app-manager%20(2)&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();